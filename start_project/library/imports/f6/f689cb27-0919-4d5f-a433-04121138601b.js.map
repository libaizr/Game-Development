{"version":3,"sources":["assets\\scripts\\Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","runJumpAction","jumpUp","tween","by","y","easing","jumpDown","sequence","call","playJumpSound","repeatForever","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","jumpAction","node","then","start","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","update","dt","Math","abs","x"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    jumpHeight: 0,\r\n    jumpDuration: 0,\r\n    maxMoveSpeed: 0,\r\n    accel: 0,\r\n\r\n    //引用声音文件\r\n    jumpAudio: {\r\n      default: null,\r\n      type: cc.AudioClip,\r\n    }\r\n  },\r\n\r\n  runJumpAction() {\r\n    //起跳\r\n    var jumpUp = cc.tween().by(this.jumpDuration, { y: this.jumpHeight }, { easing: 'sineOut' });\r\n    //下落\r\n    var jumpDown = cc.tween().by(this.jumpDuration, { y: -this.jumpHeight }, { easing: 'sineIn' });\r\n\r\n    //创建一个缓动，按jumpUp，jumpDown的顺序执行,添加回调函数，在前面动作都结束时调用playJumpSound\r\n    var tween = cc.tween().sequence(jumpUp, jumpDown).call(this.playJumpSound, this);\r\n    //重复\r\n    return cc.tween().repeatForever(tween);\r\n  },\r\n\r\n  playJumpSound: function () {\r\n    //调用声音引擎播放音频\r\n    cc.audioEngine.playEffect(this.jumpAudio, false);\r\n  },\r\n\r\n  onKeyDown(event) {\r\n    switch (event.keyCode) {\r\n      case cc.macro.KEY.a:\r\n        this.accLeft = true;\r\n        break;\r\n      case cc.macro.KEY.d:\r\n        this.accRight = true;\r\n        break;\r\n    }\r\n  },\r\n\r\n  onKeyUp(event) {\r\n    switch (event.keyCode) {\r\n      case cc.macro.KEY.a:\r\n        this.accLeft = false;\r\n        break;\r\n      case cc.macro.KEY.d:\r\n        this.accRight = false;\r\n        break;\r\n    }\r\n  },\r\n\r\n  onLoad: function () {\r\n    //初始化跳跃动作\r\n    var jumpAction = this.runJumpAction();\r\n    cc.tween(this.node).then(jumpAction).start();\r\n\r\n    //加速度方向开关\r\n    this.accLeft = false;\r\n    this.accRight = false;\r\n    //主角当前水平方向速度\r\n    this.xSpeed = 0;\r\n\r\n    //初始化键盘监听\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n  },\r\n\r\n  onDestroy() {\r\n    //取消键盘监听\r\n    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n  },\r\n\r\n  update: function (dt) {\r\n    //根据当前加速度方向每帧更新速度\r\n    if (this.accLeft) {\r\n      this.xSpeed -= this.accel * dt;\r\n    }\r\n    else if (this.accRight) {\r\n      this.xSpeed += this.accel * dt;\r\n    }\r\n\r\n    //限制主角速度最大值\r\n    if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n      this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n    }\r\n\r\n    //根据当前速度更新主角的位置\r\n    this.node.x += this.xSpeed * dt;\r\n  },\r\n\r\n  start() {\r\n\r\n  },\r\n\r\n  // update (dt) {},\r\n});\r\n"]}