{"version":3,"sources":["assets\\scripts\\Star.js"],"names":["cc","Class","Component","properties","pickRadius","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPick","spawnNewStar","gainScore","destroy","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACP,aAASD,EAAE,CAACE,SADL;AAGPC,EAAAA,UAAU,EAAE;AACV;AACAC,IAAAA,UAAU,EAAE;AAFF,GAHL;AAQP;AAEA;AAEAC,EAAAA,iBAAiB,EAAE,6BAAY;AAC7B;AACA,QAAIC,SAAS,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB,CAF6B,CAG7B;;AACA,QAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,WAAOJ,IAAP;AACD,GAlBM;AAoBPK,EAAAA,MAAM,EAAE,kBAAY;AAClB;AACA,SAAKR,IAAL,CAAUS,YAAV,GAFkB,CAIlB;;AACA,SAAKT,IAAL,CAAUU,SAAV,GALkB,CAOlB;;AACA,SAAKN,IAAL,CAAUO,OAAV;AACD,GA7BM;AA+BPC,EAAAA,MAAM,EAAE,gBAAUC,EAAV,EAAc;AACpB;AACA,QAAI,KAAKf,iBAAL,KAA2B,KAAKD,UAApC,EAAgD;AAC9C;AACA,WAAKW,MAAL;AACA;AACD,KANmB,CAQpB;;;AACA,QAAIM,YAAY,GAAG,IAAI,KAAKd,IAAL,CAAUe,KAAV,GAAkB,KAAKf,IAAL,CAAUgB,YAAnD;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,SAAKb,IAAL,CAAUc,OAAV,GAAoBD,UAAU,GAAGE,IAAI,CAACC,KAAL,CAAWN,YAAY,IAAI,MAAMG,UAAV,CAAvB,CAAjC;AACD,GA3CM;AA6CPI,EAAAA,KA7CO,mBA6CC,CAEP,CA/CM,CAiDP;;AAjDO,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    //星星和主角之间的距离小于这数值，就可以完成收集\r\n    pickRadius: 0,\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  // onLoad () {},\r\n\r\n  getPlayerDistance: function () {\r\n    //根据player节点判断距离\r\n    var playerPos = this.game.player.getPosition();\r\n    //根据两点位置计算距离\r\n    var dist = this.node.position.sub(playerPos).mag();\r\n    return dist;\r\n  },\r\n\r\n  onPick: function () {\r\n    //当星星被收集的时候，调用Game中的接口，随机生成一个新的星星\r\n    this.game.spawnNewStar();\r\n\r\n    //调用Game脚本的gainScore方法\r\n    this.game.gainScore();\r\n\r\n    //然后销毁当前的星星\r\n    this.node.destroy();\r\n  },\r\n\r\n  update: function (dt) {\r\n    //每一帧判断星星和主角之间的距离\r\n    if (this.getPlayerDistance() < this.pickRadius) {\r\n      //调用收集行为\r\n      this.onPick();\r\n      return;\r\n    }\r\n\r\n    //根据game中的定时器更新星星的透明度\r\n    var opacityRatio = 1 - this.game.timer / this.game.starDuration;\r\n    var minOpacity = 50;\r\n    this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n  },\r\n\r\n  start() {\r\n\r\n  },\r\n\r\n  // update (dt) {},\r\n});\r\n"]}